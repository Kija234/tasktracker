{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Task = _resolveComponent(\"Task\");\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.taskStore.task, task => {\n    return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_Task, {\n      onDeleteTask: $event => _ctx.$emit('delete-task', task.id),\n      task: task\n    }, null, 8 /* PROPS */, [\"onDeleteTask\", \"task\"])]);\n  }), 256 /* UNKEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","_ctx","taskStore","task","_createVNode","_component_Task","onDeleteTask","$event","$emit","id"],"sources":["/Users/dittmannja/dev/UÌˆbungen/TaskTrackerApp/nestjs_travery/TaskTracker-1/nest-rest-api/client/src/components/Tasks.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-for=\"task in taskStore.task\">\n      <Task @delete-task=\"$emit('delete-task', task.id)\" :task=\"task\" />\n    </div>\n  </div>\n</template>\n  \n  <script>\nimport Task from './Task';\n\nexport default {\n  name: 'Tasks',\n\n  props: {\n    tasks: Array,\n  },\n  components: {\n    Task,\n  },\n  emits: ['delete-task'],\n};\n</script>"],"mappings":";;;uBACEA,mBAAA,CAIM,e,kBAHJA,mBAAA,CAEMC,SAAA,QAAAC,WAAA,CAFcC,IAAA,CAAAC,SAAS,CAACC,IAAI,EAAtBA,IAAI;yBAAhBL,mBAAA,CAEM,cADJM,YAAA,CAAkEC,eAAA;MAA3DC,YAAW,EAAAC,MAAA,IAAEN,IAAA,CAAAO,KAAK,gBAAgBL,IAAI,CAACM,EAAE;MAAIN,IAAI,EAAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}