{"ast":null,"code":"import Tasks from '../components/Tasks';\nimport AddTask from '../components/AddTask';\nimport Header from '../components/Header';\nimport { useTaskStore } from '../store/TaskStore';\nexport default {\n  name: 'Task1',\n  components: {\n    Tasks,\n    AddTask,\n    Header,\n    setup() {\n      const taskStore = useTaskStore();\n\n      //fetch data\n      taskStore.getTask();\n      return {\n        taskStore\n      };\n    },\n    data() {\n      return {\n        tasks: [],\n        showAddTask: false\n      };\n    },\n    methods: {\n      toggleAddTask() {\n        this.showAddTask = !this.showAddTask;\n      }\n\n      /*  async AddTask(task) {\n      const res = await fetch('/api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(task),\n      });\n      const data = res;\n      this.tasks = [...this.tasks, data];\n      },\n      async deleteTask(id) {\n      if (confirm('Are you sure?')) {\n        const res = await fetch(`/api/tasks/${id}`, {\n          method: 'DELETE',\n        });\n        res.status === 200\n          ? (this.tasks = this.tasks.filter((task) => task.id !== id))\n          : alert('Error deleting task');\n      }\n      },*/\n    } // Ende von methods\n  }\n};","map":{"version":3,"names":["Tasks","AddTask","Header","useTaskStore","name","components","setup","taskStore","getTask","data","tasks","showAddTask","methods","toggleAddTask"],"sources":["/Users/dittmannja/dev/UÌˆbungen/TaskTrackerApp/nestjs_travery/TaskTracker-1/nest-rest-api/client/src/views/Tasks1.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"tas-list\">\n      <div v-for=\"task in taskStore.tasks\" :key=\"task.id\">\n        <Header\n          @toggle-add-task=\"toggleAddTask\"\n          title=\"Tasks\"\n          :showAddTask=\"showAddTask\"\n        />\n        <AddTask v-show=\"showAddTask\" @add-task=\"AddTask\" />\n\n        <Tasks :task=\"tasks\" @delete-task=\"deleteTask\" :tasks=\"tasks\" />\n        <router-view :showAddTask=\"showAddTask\"></router-view>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Tasks from '../components/Tasks';\nimport AddTask from '../components/AddTask';\nimport Header from '../components/Header';\nimport { useTaskStore } from '../store/TaskStore';\n\nexport default {\n  name: 'Task1',\n\n  components: {\n    Tasks,\n    AddTask,\n    Header,\n    setup() {\n      const taskStore = useTaskStore();\n\n      //fetch data\n      taskStore.getTask();\n\n      return { taskStore };\n    },\n\n    data() {\n      return {\n        tasks: [],\n        showAddTask: false,\n      };\n    },\n\n    methods: {\n      toggleAddTask() {\n        this.showAddTask = !this.showAddTask;\n      },\n\n      /*  async AddTask(task) {\n      const res = await fetch('/api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(task),\n      });\n      const data = res;\n      this.tasks = [...this.tasks, data];\n    },\n\n    async deleteTask(id) {\n      if (confirm('Are you sure?')) {\n        const res = await fetch(`/api/tasks/${id}`, {\n          method: 'DELETE',\n        });\n        res.status === 200\n          ? (this.tasks = this.tasks.filter((task) => task.id !== id))\n          : alert('Error deleting task');\n      }\n    },*/\n    }, // Ende von methods\n  },\n};\n</script>"],"mappings":"AAmBA,OAAOA,KAAI,MAAO,qBAAqB;AACvC,OAAOC,OAAM,MAAO,uBAAuB;AAC3C,OAAOC,MAAK,MAAO,sBAAsB;AACzC,SAASC,YAAW,QAAS,oBAAoB;AAEjD,eAAe;EACbC,IAAI,EAAE,OAAO;EAEbC,UAAU,EAAE;IACVL,KAAK;IACLC,OAAO;IACPC,MAAM;IACNI,KAAKA,CAAA,EAAG;MACN,MAAMC,SAAQ,GAAIJ,YAAY,CAAC,CAAC;;MAEhC;MACAI,SAAS,CAACC,OAAO,CAAC,CAAC;MAEnB,OAAO;QAAED;MAAU,CAAC;IACtB,CAAC;IAEDE,IAAIA,CAAA,EAAG;MACL,OAAO;QACLC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE;MACf,CAAC;IACH,CAAC;IAEDC,OAAO,EAAE;MACPC,aAAaA,CAAA,EAAG;QACd,IAAI,CAACF,WAAU,GAAI,CAAC,IAAI,CAACA,WAAW;MACtC;;MAEA;;;;;;;;;;;;;;;;;;;;;IAsBF,CAAC,CAAE;EACL;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}