{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Task = _resolveComponent(\"Task\");\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.tasks, task => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: task.id\n    }, [_createVNode(_component_Task, {\n      onDeleteTask: $event => _ctx.$emit('delete-task', task.id),\n      task: task\n    }, null, 8 /* PROPS */, [\"onDeleteTask\", \"task\"])]);\n  }), 128 /* KEYED_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$props","tasks","task","key","id","_createVNode","_component_Task","onDeleteTask","$event","_ctx","$emit"],"sources":["/Users/dittmannja/dev/UÌˆbungen/TaskTrackerApp/nestjs_travery/TaskTracker-1/nest-rest-api/client/src/components/Tasks.vue"],"sourcesContent":["<template>\n  <div v-for=\"task in tasks\" :key=\"task.id\">\n    <Task @delete-task=\"$emit('delete-task', task.id)\" :task=\"task\" />\n  </div>\n</template>\n  \n  <script>\nimport Task from './Task';\nimport { useTaskStore } from '../stores/TaskStore';\n\nexport default {\n  name: 'Tasks',\n\n  props: {\n    tasks: Array,\n  },\n  components: {\n    Task,\n  },\n  emits: ['delete-task'],\n};\n</script>"],"mappings":";;;2BACEA,mBAAA,CAEMC,SAAA,QAAAC,WAAA,CAFcC,MAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAhBL,mBAAA,CAEM;MAFsBM,GAAG,EAAED,IAAI,CAACE;QACpCC,YAAA,CAAkEC,eAAA;MAA3DC,YAAW,EAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,gBAAgBR,IAAI,CAACE,EAAE;MAAIF,IAAI,EAAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}