{"ast":null,"code":"import { resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AddTask = _resolveComponent(\"AddTask\");\n  const _component_Tasks = _resolveComponent(\"Tasks\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_withDirectives(_createVNode(_component_AddTask, {\n    onAddTask: $options.addTask\n  }, null, 8 /* PROPS */, [\"onAddTask\"]), [[_vShow, $data.showAddTask]]), _createVNode(_component_Tasks, {\n    onToggleReminder: _ctx.toggleReminder,\n    onDeleteTask: $options.deleteTask,\n    tasks: $data.tasks\n  }, null, 8 /* PROPS */, [\"onToggleReminder\", \"onDeleteTask\", \"tasks\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_AddTask","onAddTask","$options","addTask","$data","showAddTask","_component_Tasks","onToggleReminder","_ctx","toggleReminder","onDeleteTask","deleteTask","tasks"],"sources":["/Users/dittmannja/dev/UÌˆbungen/TaskTrackerApp/nestjs_travery/TaskTracker-1/nest-rest-api/client/src/views/Tasks1.vue"],"sourcesContent":["<template>\n  <AddTask v-show=\"showAddTask\" @add-task=\"addTask\" />\n  <Tasks\n    @toggle-reminder=\"toggleReminder\"\n    @delete-task=\"deleteTask\"\n    :tasks=\"tasks\"\n  />\n</template>\n\n\n<script>\nimport Tasks from '../components/Tasks';\nimport AddTask from '../components/AddTask';\nimport Header from '../components/Header';\nimport { useTaskStore } from '../stores/TaskStore';\n\nexport default {\n  name: 'Tasks1',\n\n  components: {\n    Tasks,\n    AddTask,\n    Header,\n  },\n\n  data() {\n    return {\n      tasks: [],\n      showAddTask: false,\n    };\n  },\n\n  methods: {\n    toggleAddTask() {\n      this.showAddTask = !this.showAddTask;\n    },\n    addTask() {\n      const taskStore = useTaskStore();\n\n      taskStore.addTask();\n    },\n    deleteTask() {\n      const taskStore = useTaskStore();\n      taskStore.deleteTask();\n    },\n    /*async updateTask(task) {\n      let url = `https://jsonplaceholder.typicode.com/todos` + this.$route.params.id;\n      console.log(url);\n      const res = await axios.put(, task);\n    },*/\n  },\n  async created() {\n    const taskStore = useTaskStore();\n    console.log(taskStore);\n    //fetch data\n    const data = await taskStore.getTask();\n\n    console.log(data);\n    this.tasks = data;\n    return this.tasks;\n  },\n\n  // Ende von methods\n  /*\n   */\n};\n</script>\n"],"mappings":";;;;6EACEA,YAAA,CAAoDC,kBAAA;IAArBC,SAAQ,EAAEC,QAAA,CAAAC;EAAO,yC,SAA/BC,KAAA,CAAAC,WAAW,E,GAC5BN,YAAA,CAIEO,gBAAA;IAHCC,gBAAe,EAAEC,IAAA,CAAAC,cAAc;IAC/BC,YAAW,EAAER,QAAA,CAAAS,UAAU;IACvBC,KAAK,EAAER,KAAA,CAAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}