{"ast":null,"code":"import Tasks from '../components/Tasks';\nimport AddTask from '../components/AddTask';\nimport Header from '../components/Header';\n//import axios from 'axios';\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'Task1',\n  components: {\n    Tasks,\n    AddTask,\n    Header\n  },\n  data() {\n    return {\n      tasks: [],\n      showAddTask: false\n    };\n  },\n  methods: {\n    ...mapActions(['getTasks', 'deleteTask', 'updateTask']),\n    toggleAddTask() {\n      this.showAddTask = !this.showAddTask;\n    }\n\n    /*  async AddTask(task) {\n      const res = await fetch('/api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(task),\n      });\n      const data = res;\n      this.tasks = [...this.tasks, data];\n    },\n     async deleteTask(id) {\n      if (confirm('Are you sure?')) {\n        const res = await fetch(`/api/tasks/${id}`, {\n          method: 'DELETE',\n        });\n        res.status === 200\n          ? (this.tasks = this.tasks.filter((task) => task.id !== id))\n          : alert('Error deleting task');\n      }\n    },*/\n  },\n\n  // Ende von methods\n\n  computed: mapGetters(['allTasks']),\n  async created() {\n    await this.$store.getTasks();\n  }\n};","map":{"version":3,"names":["Tasks","AddTask","Header","mapActions","mapGetters","name","components","data","tasks","showAddTask","methods","toggleAddTask","computed","created","$store","getTasks"],"sources":["/Users/dittmannja/dev/UÌˆbungen/TaskTrackerApp/nestjs_travery/TaskTracker-1/nest-rest-api/client/src/views/Tasks1.vue"],"sourcesContent":["<template>\n  <div>\n    <Header\n      @toggle-add-task=\"toggleAddTask\"\n      title=\"Tasks\"\n      :showAddTask=\"showAddTask\"\n    />\n    <AddTask v-show=\"showAddTask\" @add-task=\"AddTask\" />\n\n    <Tasks @delete-task=\"deleteTask\" :tasks=\"tasks\" />\n    <router-view :showAddTask=\"showAddTask\"></router-view>\n  </div>\n</template>\n\n<script>\nimport Tasks from '../components/Tasks';\nimport AddTask from '../components/AddTask';\nimport Header from '../components/Header';\n//import axios from 'axios';\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  name: 'Task1',\n\n  components: {\n    Tasks,\n    AddTask,\n    Header,\n  },\n\n  data() {\n    return {\n      tasks: [],\n      showAddTask: false,\n    };\n  },\n\n  methods: {\n    ...mapActions(['getTasks', 'deleteTask', 'updateTask']),\n\n    toggleAddTask() {\n      this.showAddTask = !this.showAddTask;\n    },\n\n    /*  async AddTask(task) {\n      const res = await fetch('/api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(task),\n      });\n      const data = res;\n      this.tasks = [...this.tasks, data];\n    },\n\n    async deleteTask(id) {\n      if (confirm('Are you sure?')) {\n        const res = await fetch(`/api/tasks/${id}`, {\n          method: 'DELETE',\n        });\n        res.status === 200\n          ? (this.tasks = this.tasks.filter((task) => task.id !== id))\n          : alert('Error deleting task');\n      }\n    },*/\n  }, // Ende von methods\n\n  computed: mapGetters(['allTasks']),\n  async created() {\n    await this.$store.getTasks();\n  },\n};\n</script>"],"mappings":"AAeA,OAAOA,KAAI,MAAO,qBAAqB;AACvC,OAAOC,OAAM,MAAO,uBAAuB;AAC3C,OAAOC,MAAK,MAAO,sBAAsB;AACzC;AACA,SAASC,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAe;EACbC,IAAI,EAAE,OAAO;EAEbC,UAAU,EAAE;IACVN,KAAK;IACLC,OAAO;IACPC;EACF,CAAC;EAEDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACP,GAAGP,UAAU,CAAC,CAAC,UAAU,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;IAEvDQ,aAAaA,CAAA,EAAG;MACd,IAAI,CAACF,WAAU,GAAI,CAAC,IAAI,CAACA,WAAW;IACtC;;IAEA;;;;;;;;;;;;;;;;;;;;;EAsBF,CAAC;;EAAE;;EAEHG,QAAQ,EAAER,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC;EAClC,MAAMS,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC;EAC9B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}