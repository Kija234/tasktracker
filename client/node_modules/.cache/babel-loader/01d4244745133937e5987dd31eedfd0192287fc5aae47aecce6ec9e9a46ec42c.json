{"ast":null,"code":"import { defineStore } from 'pinia';\nexport const useTaskStore = defineStore('taskStore', {\n  state: () => ({\n    tasks: [{\n      id: 1,\n      task: 'washing dishes',\n      day: 'tomorrow afternoon'\n    }]\n  }),\n  actions: {\n    async getTask() {\n      const res = await fetch('/api/tasks');\n      const data = await res.json();\n      this.tasks = data;\n    },\n    /*async addTask(task) {\n      this - this.tasks.push(task);\n       const res = await fetch('/api/tasks', {\n        method: 'POST',\n        body: JSON.stringify(task),\n        headers: { 'Content-Type': 'application/json' },\n      });\n       if (res.error) {\n        console.log(res.error);\n      }\n    },*/\n    async deleteTask(id) {\n      this.tasks = this.tasks.filter(task => {\n        return task.id !== id;\n      });\n      const res = await fetch('/api/tasks' + id, {\n        method: 'DELETE'\n      });\n      if (res.error) {\n        console.log(res.error);\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","useTaskStore","state","tasks","id","task","day","actions","getTask","res","fetch","data","json","deleteTask","filter","method","error","console","log"],"sources":["/Users/dittmannja/dev/UÌˆbungen/TaskTrackerApp/nestjs_travery/TaskTracker-1/nest-rest-api/client/src/stores/TaskStore.js"],"sourcesContent":["import { defineStore } from 'pinia';\n\nexport const useTaskStore = defineStore('taskStore', {\n  state: () => ({\n    tasks: [\n      {\n        id: 1,\n        task: 'washing dishes',\n        day: 'tomorrow afternoon',\n      },\n    ],\n  }),\n  actions: {\n    async getTask() {\n      const res = await fetch('/api/tasks');\n      const data = await res.json();\n\n      this.tasks = data;\n    },\n    /*async addTask(task) {\n      this - this.tasks.push(task);\n\n      const res = await fetch('/api/tasks', {\n        method: 'POST',\n        body: JSON.stringify(task),\n        headers: { 'Content-Type': 'application/json' },\n      });\n\n      if (res.error) {\n        console.log(res.error);\n      }\n    },*/\n    async deleteTask(id) {\n      this.tasks = this.tasks.filter((task) => {\n        return task.id !== id;\n      });\n\n      const res = await fetch('/api/tasks' + id, {\n        method: 'DELETE',\n      });\n      if (res.error) {\n        console.log(res.error);\n      }\n    },\n  },\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC,WAAW,EAAE;EACnDE,KAAK,EAAEA,CAAA,MAAO;IACZC,KAAK,EAAE,CACL;MACEC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,gBAAgB;MACtBC,GAAG,EAAE;IACP,CAAC;EAEL,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,OAAOA,CAAA,EAAG;MACd,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;MACrC,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAE7B,IAAI,CAACT,KAAK,GAAGQ,IAAI;IACnB,CAAC;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAGI,MAAME,UAAUA,CAACT,EAAE,EAAE;MACnB,IAAI,CAACD,KAAK,GAAG,IAAI,CAACA,KAAK,CAACW,MAAM,CAAET,IAAI,IAAK;QACvC,OAAOA,IAAI,CAACD,EAAE,KAAKA,EAAE;MACvB,CAAC,CAAC;MAEF,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAY,GAAGN,EAAE,EAAE;QACzCW,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAIN,GAAG,CAACO,KAAK,EAAE;QACbC,OAAO,CAACC,GAAG,CAACT,GAAG,CAACO,KAAK,CAAC;MACxB;IACF;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}