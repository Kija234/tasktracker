{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport BootstrapNext from 'bootstrap-vue-next';\nimport { createStore } from 'vuex';\nimport axios from 'axios';\nconst url = 'http://localhost:3000/';\nconst store = createStore({\n  state() {\n    return {\n      task: '',\n      tasks: [],\n      contact: '',\n      contacts: []\n    };\n  },\n  getters: {\n    allTasks: state => state.tasks\n  },\n  actions: {\n    //Code for Tasks\n    async getTasks({\n      commit\n    }) {\n      const response = await axios.get(url + 'api/tasks');\n      commit('setTasks', response.data);\n    },\n    async addTask({\n      commit\n    }, _newTask) {\n      const response = await axios.post(url + 'api/tasks', {\n        _newTask\n      });\n      commit('newTask', response.data);\n    },\n    async deleteTask({\n      commit\n    }, id) {\n      await axios.delete(url + 'api/tasks/id');\n    },\n    async filterTask({\n      commit\n    }, e) {\n      console.log(e); //minute 45:44\n      const limit = parseInt(e.target.options[e.target.options.selectetdIndex].innerText);\n      const response = await axios.get(url + `api/tasks?_limit=${limit}`);\n      commit('setTask', response.data);\n    },\n    async updateTask({\n      commit\n    }, updTask) {\n      const response = await axios.put(url + `api/tasks/${updTask.id}`, updTask);\n      console.log(response.data);\n      commit(url + 'updTask', response.data);\n    },\n    //Code for contacts\n    async getContacts({\n      commit\n    }) {\n      const response = await axios.get(url + 'api/contacts');\n      commit('setContacts', response.data);\n    },\n    async addContacts({\n      commit\n    }, _newContacts) {\n      const response = await axios.post(url + 'api/contacts', {\n        _newContacts\n      });\n      commit('newContacts', response.data);\n    },\n    async deleteContacts({\n      commit\n    }, id) {\n      await axios.delete(url + 'api/contacts/id');\n    },\n    async filterContacts({\n      commit\n    }, e) {\n      console.log(e); //minute 45:44\n      const limit = parseInt(e.target.options[e.target.options.selectetdIndex].innerText);\n      const response = await axios.get(url + `api/contacts?_limit=${limit}`);\n      commit('setContacts', response.data);\n    },\n    async updateContacts({\n      commit\n    }, updContacts) {\n      const response = await axios.put(url + `api/contacts/${updContacts.id}`, updContacts);\n      console.log(response.data);\n      commit(url + 'updContacts', response.data);\n    }\n  },\n  mutations: {\n    //Tasks\n    setTasks: (state, tasks) => state.tasks = tasks,\n    newTask: (state, task) => state.tasks.unshift(task),\n    removeTask: (task, id) => state.tasks = state.tasks.filter(task => task.id !== id),\n    updatTask: (state, updTask) => {\n      const index = state.task.findIndex(task => task.id === updTask.id);\n      if (index !== -1) {\n        state.task.splice(index, 1, updTask);\n      }\n    },\n    //Contacts\n    setContacts: (state, contacts) => state.contacts = contacts,\n    newContact: (state, contact) => state.contacts.unshift(contact),\n    removeContact: (contact, id) => state.contacts = state.contacts.filter(contact => contact.id !== id),\n    updateContacts: (state, updContact) => {\n      const index = state.contacts.findIndex(contact => contact.id === updContact.id);\n      if (index !== -1) {\n        state.contact.splice(index, 1, updContact);\n      }\n    }\n  }\n});\nconst app = createApp(App);\napp.use(router);\napp.use(store);\napp.use(BootstrapNext);\napp.mount('#app');","map":{"version":3,"names":["createApp","App","router","BootstrapNext","createStore","axios","url","store","state","task","tasks","contact","contacts","getters","allTasks","actions","getTasks","commit","response","get","data","addTask","_newTask","post","deleteTask","id","delete","filterTask","e","console","log","limit","parseInt","target","options","selectetdIndex","innerText","updateTask","updTask","put","getContacts","addContacts","_newContacts","deleteContacts","filterContacts","updateContacts","updContacts","mutations","setTasks","newTask","unshift","removeTask","filter","updatTask","index","findIndex","splice","setContacts","newContact","removeContact","updContact","app","use","mount"],"sources":["/Users/dittmannja/dev/UÌˆbungen/TaskTrackerApp/nestjs_travery/TaskTracker-1/nest-rest-api/client/src/main.js"],"sourcesContent":["import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport BootstrapNext from 'bootstrap-vue-next';\nimport { createStore } from 'vuex';\nimport axios from 'axios';\n\nconst url = 'http://localhost:3000/';\n\nconst store = createStore({\n  state() {\n    return {\n      task: '',\n      tasks: [],\n      contact: '',\n      contacts: [],\n    };\n  },\n\n  getters: {\n    allTasks: (state) => state.tasks,\n  },\n\n  actions: {\n    //Code for Tasks\n    async getTasks({ commit }) {\n      const response = await axios.get(url + 'api/tasks');\n      commit('setTasks', response.data);\n    },\n    async addTask({ commit }, _newTask) {\n      const response = await axios.post(url + 'api/tasks', { _newTask });\n\n      commit('newTask', response.data);\n    },\n    async deleteTask({ commit }, id) {\n      await axios.delete(url + 'api/tasks/id');\n    },\n    async filterTask({ commit }, e) {\n      console.log(e); //minute 45:44\n      const limit = parseInt(\n        e.target.options[e.target.options.selectetdIndex].innerText,\n      );\n      const response = await axios.get(url + `api/tasks?_limit=${limit}`);\n\n      commit('setTask', response.data);\n    },\n    async updateTask({ commit }, updTask) {\n      const response = await axios.put(\n        url + `api/tasks/${updTask.id}`,\n        updTask,\n      );\n      console.log(response.data);\n      commit(url + 'updTask', response.data);\n    },\n\n    //Code for contacts\n    async getContacts({ commit }) {\n      const response = await axios.get(url + 'api/contacts');\n      commit('setContacts', response.data);\n    },\n    async addContacts({ commit }, _newContacts) {\n      const response = await axios.post(url + 'api/contacts', {\n        _newContacts,\n      });\n\n      commit('newContacts', response.data);\n    },\n    async deleteContacts({ commit }, id) {\n      await axios.delete(url + 'api/contacts/id');\n    },\n    async filterContacts({ commit }, e) {\n      console.log(e); //minute 45:44\n      const limit = parseInt(\n        e.target.options[e.target.options.selectetdIndex].innerText,\n      );\n      const response = await axios.get(url + `api/contacts?_limit=${limit}`);\n\n      commit('setContacts', response.data);\n    },\n    async updateContacts({ commit }, updContacts) {\n      const response = await axios.put(\n        url + `api/contacts/${updContacts.id}`,\n        updContacts,\n      );\n      console.log(response.data);\n      commit(url + 'updContacts', response.data);\n    },\n  },\n\n  mutations: {\n    //Tasks\n    setTasks: (state, tasks) => (state.tasks = tasks),\n    newTask: (state, task) => state.tasks.unshift(task),\n    removeTask: (task, id) =>\n      (state.tasks = state.tasks.filter((task) => task.id !== id)),\n    updatTask: (state, updTask) => {\n      const index = state.task.findIndex((task) => task.id === updTask.id);\n      if (index !== -1) {\n        state.task.splice(index, 1, updTask);\n      }\n    },\n    //Contacts\n    setContacts: (state, contacts) => (state.contacts = contacts),\n    newContact: (state, contact) => state.contacts.unshift(contact),\n    removeContact: (contact, id) =>\n      (state.contacts = state.contacts.filter((contact) => contact.id !== id)),\n    updateContacts: (state, updContact) => {\n      const index = state.contacts.findIndex(\n        (contact) => contact.id === updContact.id,\n      );\n      if (index !== -1) {\n        state.contact.splice(index, 1, updContact);\n      }\n    },\n  },\n});\n\nconst app = createApp(App);\napp.use(router);\napp.use(store);\napp.use(BootstrapNext);\napp.mount('#app');\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,SAASC,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAG,wBAAwB;AAEpC,MAAMC,KAAK,GAAGH,WAAW,CAAC;EACxBI,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,QAAQ,EAAGN,KAAK,IAAKA,KAAK,CAACE;EAC7B,CAAC;EAEDK,OAAO,EAAE;IACP;IACA,MAAMC,QAAQA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACzB,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAACb,GAAG,GAAG,WAAW,CAAC;MACnDW,MAAM,CAAC,UAAU,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACnC,CAAC;IACD,MAAMC,OAAOA,CAAC;MAAEJ;IAAO,CAAC,EAAEK,QAAQ,EAAE;MAClC,MAAMJ,QAAQ,GAAG,MAAMb,KAAK,CAACkB,IAAI,CAACjB,GAAG,GAAG,WAAW,EAAE;QAAEgB;MAAS,CAAC,CAAC;MAElEL,MAAM,CAAC,SAAS,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAClC,CAAC;IACD,MAAMI,UAAUA,CAAC;MAAEP;IAAO,CAAC,EAAEQ,EAAE,EAAE;MAC/B,MAAMpB,KAAK,CAACqB,MAAM,CAACpB,GAAG,GAAG,cAAc,CAAC;IAC1C,CAAC;IACD,MAAMqB,UAAUA,CAAC;MAAEV;IAAO,CAAC,EAAEW,CAAC,EAAE;MAC9BC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CAAC,CAAC;MAChB,MAAMG,KAAK,GAAGC,QAAQ,CACpBJ,CAAC,CAACK,MAAM,CAACC,OAAO,CAACN,CAAC,CAACK,MAAM,CAACC,OAAO,CAACC,cAAc,CAAC,CAACC,SACpD,CAAC;MACD,MAAMlB,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAACb,GAAG,GAAI,oBAAmByB,KAAM,EAAC,CAAC;MAEnEd,MAAM,CAAC,SAAS,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAClC,CAAC;IACD,MAAMiB,UAAUA,CAAC;MAAEpB;IAAO,CAAC,EAAEqB,OAAO,EAAE;MACpC,MAAMpB,QAAQ,GAAG,MAAMb,KAAK,CAACkC,GAAG,CAC9BjC,GAAG,GAAI,aAAYgC,OAAO,CAACb,EAAG,EAAC,EAC/Ba,OACF,CAAC;MACDT,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAACE,IAAI,CAAC;MAC1BH,MAAM,CAACX,GAAG,GAAG,SAAS,EAAEY,QAAQ,CAACE,IAAI,CAAC;IACxC,CAAC;IAED;IACA,MAAMoB,WAAWA,CAAC;MAAEvB;IAAO,CAAC,EAAE;MAC5B,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAACb,GAAG,GAAG,cAAc,CAAC;MACtDW,MAAM,CAAC,aAAa,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACtC,CAAC;IACD,MAAMqB,WAAWA,CAAC;MAAExB;IAAO,CAAC,EAAEyB,YAAY,EAAE;MAC1C,MAAMxB,QAAQ,GAAG,MAAMb,KAAK,CAACkB,IAAI,CAACjB,GAAG,GAAG,cAAc,EAAE;QACtDoC;MACF,CAAC,CAAC;MAEFzB,MAAM,CAAC,aAAa,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACtC,CAAC;IACD,MAAMuB,cAAcA,CAAC;MAAE1B;IAAO,CAAC,EAAEQ,EAAE,EAAE;MACnC,MAAMpB,KAAK,CAACqB,MAAM,CAACpB,GAAG,GAAG,iBAAiB,CAAC;IAC7C,CAAC;IACD,MAAMsC,cAAcA,CAAC;MAAE3B;IAAO,CAAC,EAAEW,CAAC,EAAE;MAClCC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CAAC,CAAC;MAChB,MAAMG,KAAK,GAAGC,QAAQ,CACpBJ,CAAC,CAACK,MAAM,CAACC,OAAO,CAACN,CAAC,CAACK,MAAM,CAACC,OAAO,CAACC,cAAc,CAAC,CAACC,SACpD,CAAC;MACD,MAAMlB,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAACb,GAAG,GAAI,uBAAsByB,KAAM,EAAC,CAAC;MAEtEd,MAAM,CAAC,aAAa,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACtC,CAAC;IACD,MAAMyB,cAAcA,CAAC;MAAE5B;IAAO,CAAC,EAAE6B,WAAW,EAAE;MAC5C,MAAM5B,QAAQ,GAAG,MAAMb,KAAK,CAACkC,GAAG,CAC9BjC,GAAG,GAAI,gBAAewC,WAAW,CAACrB,EAAG,EAAC,EACtCqB,WACF,CAAC;MACDjB,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAACE,IAAI,CAAC;MAC1BH,MAAM,CAACX,GAAG,GAAG,aAAa,EAAEY,QAAQ,CAACE,IAAI,CAAC;IAC5C;EACF,CAAC;EAED2B,SAAS,EAAE;IACT;IACAC,QAAQ,EAAEA,CAACxC,KAAK,EAAEE,KAAK,KAAMF,KAAK,CAACE,KAAK,GAAGA,KAAM;IACjDuC,OAAO,EAAEA,CAACzC,KAAK,EAAEC,IAAI,KAAKD,KAAK,CAACE,KAAK,CAACwC,OAAO,CAACzC,IAAI,CAAC;IACnD0C,UAAU,EAAEA,CAAC1C,IAAI,EAAEgB,EAAE,KAClBjB,KAAK,CAACE,KAAK,GAAGF,KAAK,CAACE,KAAK,CAAC0C,MAAM,CAAE3C,IAAI,IAAKA,IAAI,CAACgB,EAAE,KAAKA,EAAE,CAAE;IAC9D4B,SAAS,EAAEA,CAAC7C,KAAK,EAAE8B,OAAO,KAAK;MAC7B,MAAMgB,KAAK,GAAG9C,KAAK,CAACC,IAAI,CAAC8C,SAAS,CAAE9C,IAAI,IAAKA,IAAI,CAACgB,EAAE,KAAKa,OAAO,CAACb,EAAE,CAAC;MACpE,IAAI6B,KAAK,KAAK,CAAC,CAAC,EAAE;QAChB9C,KAAK,CAACC,IAAI,CAAC+C,MAAM,CAACF,KAAK,EAAE,CAAC,EAAEhB,OAAO,CAAC;MACtC;IACF,CAAC;IACD;IACAmB,WAAW,EAAEA,CAACjD,KAAK,EAAEI,QAAQ,KAAMJ,KAAK,CAACI,QAAQ,GAAGA,QAAS;IAC7D8C,UAAU,EAAEA,CAAClD,KAAK,EAAEG,OAAO,KAAKH,KAAK,CAACI,QAAQ,CAACsC,OAAO,CAACvC,OAAO,CAAC;IAC/DgD,aAAa,EAAEA,CAAChD,OAAO,EAAEc,EAAE,KACxBjB,KAAK,CAACI,QAAQ,GAAGJ,KAAK,CAACI,QAAQ,CAACwC,MAAM,CAAEzC,OAAO,IAAKA,OAAO,CAACc,EAAE,KAAKA,EAAE,CAAE;IAC1EoB,cAAc,EAAEA,CAACrC,KAAK,EAAEoD,UAAU,KAAK;MACrC,MAAMN,KAAK,GAAG9C,KAAK,CAACI,QAAQ,CAAC2C,SAAS,CACnC5C,OAAO,IAAKA,OAAO,CAACc,EAAE,KAAKmC,UAAU,CAACnC,EACzC,CAAC;MACD,IAAI6B,KAAK,KAAK,CAAC,CAAC,EAAE;QAChB9C,KAAK,CAACG,OAAO,CAAC6C,MAAM,CAACF,KAAK,EAAE,CAAC,EAAEM,UAAU,CAAC;MAC5C;IACF;EACF;AACF,CAAC,CAAC;AAEF,MAAMC,GAAG,GAAG7D,SAAS,CAACC,GAAG,CAAC;AAC1B4D,GAAG,CAACC,GAAG,CAAC5D,MAAM,CAAC;AACf2D,GAAG,CAACC,GAAG,CAACvD,KAAK,CAAC;AACdsD,GAAG,CAACC,GAAG,CAAC3D,aAAa,CAAC;AACtB0D,GAAG,CAACE,KAAK,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}