{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport BootstrapNext from 'bootstrap-vue-next';\nimport { createStore } from 'vuex';\nimport axios from 'axios';\nimport { HttpStatusCode } from 'axios';\nimport { NOTFOUND } from 'dns';\nconst url = axios.get('http://localhost:3000/');\nconst store = createStore({\n  state() {\n    return {\n      task: '',\n      tasks: [],\n      contact: '',\n      contacts: []\n    };\n  },\n  getters: {\n    allTasks: state => state.tasks\n  },\n  actions: {\n    //Code for Tasks\n    async getTasks({\n      commit\n    }) {\n      try {\n        const response = await axios.get(url + 'api/tasks');\n        this.tasks = res.data;\n      } catch (error) {\n        throw new Error('notfound');\n      }\n      commit('setTasks', response.data);\n    },\n    async addTask({\n      commit\n    }, _newTask) {\n      const response = await axios.post(url + 'api/tasks', {\n        _newTask\n      });\n      commit('newTask', response.data);\n    },\n    async deleteTask({\n      commit\n    }, id) {\n      await axios.delete(url + 'api/tasks/id');\n    },\n    async filterTask({\n      commit\n    }, e) {\n      console.log(e); //minute 45:44\n      const limit = parseInt(e.target.options[e.target.options.selectetdIndex].innerText);\n      const response = await axios.get(url + `api/tasks?_limit=${limit}`);\n      commit('setTask', response.data);\n    },\n    async updateTask({\n      commit\n    }, updTask) {\n      const response = await axios.put(url + `api/tasks/${updTask.id}`, updTask);\n      console.log(response.data);\n      commit(url + 'updTask', response.data);\n    },\n    //Code for contacts\n    async getContacts({\n      commit\n    }) {\n      const response = await axios.get(url + 'api/contacts');\n      commit('setContacts', response.data);\n    },\n    async addContacts({\n      commit\n    }, _newContacts) {\n      const response = await axios.post(url + 'api/contacts', {\n        _newContacts\n      });\n      commit('newContacts', response.data);\n    },\n    async deleteContacts({\n      commit\n    }, id) {\n      await axios.delete(url + 'api/contacts/id');\n    },\n    async filterContacts({\n      commit\n    }, e) {\n      console.log(e); //minute 45:44\n      const limit = parseInt(e.target.options[e.target.options.selectetdIndex].innerText);\n      const response = await axios.get(url + `api/contacts?_limit=${limit}`);\n      commit('setContacts', response.data);\n    },\n    async updateContacts({\n      commit\n    }, updContacts) {\n      const response = await axios.put(url + `api/contacts/${updContacts.id}`, updContacts);\n      console.log(response.data);\n      commit(url + 'updContacts', response.data);\n    }\n  },\n  mutations: {\n    //Tasks\n    setTasks: (state, tasks) => state.tasks = tasks,\n    newTask: (state, task) => state.tasks.unshift(task),\n    removeTask: (task, id) => state.tasks = state.tasks.filter(task => task.id !== id),\n    updatTask: (state, updTask) => {\n      const index = state.task.findIndex(task => task.id === updTask.id);\n      if (index !== -1) {\n        state.task.splice(index, 1, updTask);\n      }\n    },\n    //Contacts\n    setContacts: (state, contacts) => state.contacts = contacts,\n    newContact: (state, contact) => state.contacts.unshift(contact),\n    removeContact: (contact, id) => state.contacts = state.contacts.filter(contact => contact.id !== id),\n    updateContacts: (state, updContact) => {\n      const index = state.contacts.findIndex(contact => contact.id === updContact.id);\n      if (index !== -1) {\n        state.contact.splice(index, 1, updContact);\n      }\n    }\n  }\n});\nconst app = createApp(App);\napp.use(router);\napp.use(store);\napp.use(BootstrapNext);\napp.mount('#app');","map":{"version":3,"names":["createApp","App","router","BootstrapNext","createStore","axios","HttpStatusCode","NOTFOUND","url","get","store","state","task","tasks","contact","contacts","getters","allTasks","actions","getTasks","commit","response","res","data","error","Error","addTask","_newTask","post","deleteTask","id","delete","filterTask","e","console","log","limit","parseInt","target","options","selectetdIndex","innerText","updateTask","updTask","put","getContacts","addContacts","_newContacts","deleteContacts","filterContacts","updateContacts","updContacts","mutations","setTasks","newTask","unshift","removeTask","filter","updatTask","index","findIndex","splice","setContacts","newContact","removeContact","updContact","app","use","mount"],"sources":["/Users/dittmannja/dev/UÌˆbungen/TaskTrackerApp/nestjs_travery/TaskTracker-1/nest-rest-api/client/src/main.js"],"sourcesContent":["import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport BootstrapNext from 'bootstrap-vue-next';\nimport { createStore } from 'vuex';\nimport axios from 'axios';\nimport { HttpStatusCode } from 'axios';\nimport { NOTFOUND } from 'dns';\n\nconst url = axios.get('http://localhost:3000/');\n\nconst store = createStore({\n  state() {\n    return {\n      task: '',\n      tasks: [],\n      contact: '',\n      contacts: [],\n    };\n  },\n\n  getters: {\n    allTasks: (state) => state.tasks,\n  },\n\n  actions: {\n    //Code for Tasks\n    async getTasks({ commit }) {\n      try {\n        const response = await axios.get(url + 'api/tasks');\n        this.tasks = res.data;\n      } catch (error) {\n        throw new Error('notfound');\n      }\n\n      commit('setTasks', response.data);\n    },\n    async addTask({ commit }, _newTask) {\n      const response = await axios.post(url + 'api/tasks', { _newTask });\n\n      commit('newTask', response.data);\n    },\n    async deleteTask({ commit }, id) {\n      await axios.delete(url + 'api/tasks/id');\n    },\n    async filterTask({ commit }, e) {\n      console.log(e); //minute 45:44\n      const limit = parseInt(\n        e.target.options[e.target.options.selectetdIndex].innerText,\n      );\n      const response = await axios.get(url + `api/tasks?_limit=${limit}`);\n\n      commit('setTask', response.data);\n    },\n    async updateTask({ commit }, updTask) {\n      const response = await axios.put(\n        url + `api/tasks/${updTask.id}`,\n        updTask,\n      );\n      console.log(response.data);\n      commit(url + 'updTask', response.data);\n    },\n\n    //Code for contacts\n    async getContacts({ commit }) {\n      const response = await axios.get(url + 'api/contacts');\n      commit('setContacts', response.data);\n    },\n    async addContacts({ commit }, _newContacts) {\n      const response = await axios.post(url + 'api/contacts', {\n        _newContacts,\n      });\n\n      commit('newContacts', response.data);\n    },\n    async deleteContacts({ commit }, id) {\n      await axios.delete(url + 'api/contacts/id');\n    },\n    async filterContacts({ commit }, e) {\n      console.log(e); //minute 45:44\n      const limit = parseInt(\n        e.target.options[e.target.options.selectetdIndex].innerText,\n      );\n      const response = await axios.get(url + `api/contacts?_limit=${limit}`);\n\n      commit('setContacts', response.data);\n    },\n    async updateContacts({ commit }, updContacts) {\n      const response = await axios.put(\n        url + `api/contacts/${updContacts.id}`,\n        updContacts,\n      );\n      console.log(response.data);\n      commit(url + 'updContacts', response.data);\n    },\n  },\n\n  mutations: {\n    //Tasks\n    setTasks: (state, tasks) => (state.tasks = tasks),\n    newTask: (state, task) => state.tasks.unshift(task),\n    removeTask: (task, id) =>\n      (state.tasks = state.tasks.filter((task) => task.id !== id)),\n    updatTask: (state, updTask) => {\n      const index = state.task.findIndex((task) => task.id === updTask.id);\n      if (index !== -1) {\n        state.task.splice(index, 1, updTask);\n      }\n    },\n    //Contacts\n    setContacts: (state, contacts) => (state.contacts = contacts),\n    newContact: (state, contact) => state.contacts.unshift(contact),\n    removeContact: (contact, id) =>\n      (state.contacts = state.contacts.filter((contact) => contact.id !== id)),\n    updateContacts: (state, updContact) => {\n      const index = state.contacts.findIndex(\n        (contact) => contact.id === updContact.id,\n      );\n      if (index !== -1) {\n        state.contact.splice(index, 1, updContact);\n      }\n    },\n  },\n});\n\nconst app = createApp(App);\napp.use(router);\napp.use(store);\napp.use(BootstrapNext);\napp.mount('#app');\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,SAASC,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,OAAO;AACtC,SAASC,QAAQ,QAAQ,KAAK;AAE9B,MAAMC,GAAG,GAAGH,KAAK,CAACI,GAAG,CAAC,wBAAwB,CAAC;AAE/C,MAAMC,KAAK,GAAGN,WAAW,CAAC;EACxBO,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,QAAQ,EAAGN,KAAK,IAAKA,KAAK,CAACE;EAC7B,CAAC;EAEDK,OAAO,EAAE;IACP;IACA,MAAMC,QAAQA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACzB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACI,GAAG,CAACD,GAAG,GAAG,WAAW,CAAC;QACnD,IAAI,CAACK,KAAK,GAAGS,GAAG,CAACC,IAAI;MACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,UAAU,CAAC;MAC7B;MAEAL,MAAM,CAAC,UAAU,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACnC,CAAC;IACD,MAAMG,OAAOA,CAAC;MAAEN;IAAO,CAAC,EAAEO,QAAQ,EAAE;MAClC,MAAMN,QAAQ,GAAG,MAAMhB,KAAK,CAACuB,IAAI,CAACpB,GAAG,GAAG,WAAW,EAAE;QAAEmB;MAAS,CAAC,CAAC;MAElEP,MAAM,CAAC,SAAS,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAClC,CAAC;IACD,MAAMM,UAAUA,CAAC;MAAET;IAAO,CAAC,EAAEU,EAAE,EAAE;MAC/B,MAAMzB,KAAK,CAAC0B,MAAM,CAACvB,GAAG,GAAG,cAAc,CAAC;IAC1C,CAAC;IACD,MAAMwB,UAAUA,CAAC;MAAEZ;IAAO,CAAC,EAAEa,CAAC,EAAE;MAC9BC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CAAC,CAAC;MAChB,MAAMG,KAAK,GAAGC,QAAQ,CACpBJ,CAAC,CAACK,MAAM,CAACC,OAAO,CAACN,CAAC,CAACK,MAAM,CAACC,OAAO,CAACC,cAAc,CAAC,CAACC,SACpD,CAAC;MACD,MAAMpB,QAAQ,GAAG,MAAMhB,KAAK,CAACI,GAAG,CAACD,GAAG,GAAI,oBAAmB4B,KAAM,EAAC,CAAC;MAEnEhB,MAAM,CAAC,SAAS,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAClC,CAAC;IACD,MAAMmB,UAAUA,CAAC;MAAEtB;IAAO,CAAC,EAAEuB,OAAO,EAAE;MACpC,MAAMtB,QAAQ,GAAG,MAAMhB,KAAK,CAACuC,GAAG,CAC9BpC,GAAG,GAAI,aAAYmC,OAAO,CAACb,EAAG,EAAC,EAC/Ba,OACF,CAAC;MACDT,OAAO,CAACC,GAAG,CAACd,QAAQ,CAACE,IAAI,CAAC;MAC1BH,MAAM,CAACZ,GAAG,GAAG,SAAS,EAAEa,QAAQ,CAACE,IAAI,CAAC;IACxC,CAAC;IAED;IACA,MAAMsB,WAAWA,CAAC;MAAEzB;IAAO,CAAC,EAAE;MAC5B,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACI,GAAG,CAACD,GAAG,GAAG,cAAc,CAAC;MACtDY,MAAM,CAAC,aAAa,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACtC,CAAC;IACD,MAAMuB,WAAWA,CAAC;MAAE1B;IAAO,CAAC,EAAE2B,YAAY,EAAE;MAC1C,MAAM1B,QAAQ,GAAG,MAAMhB,KAAK,CAACuB,IAAI,CAACpB,GAAG,GAAG,cAAc,EAAE;QACtDuC;MACF,CAAC,CAAC;MAEF3B,MAAM,CAAC,aAAa,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACtC,CAAC;IACD,MAAMyB,cAAcA,CAAC;MAAE5B;IAAO,CAAC,EAAEU,EAAE,EAAE;MACnC,MAAMzB,KAAK,CAAC0B,MAAM,CAACvB,GAAG,GAAG,iBAAiB,CAAC;IAC7C,CAAC;IACD,MAAMyC,cAAcA,CAAC;MAAE7B;IAAO,CAAC,EAAEa,CAAC,EAAE;MAClCC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CAAC,CAAC;MAChB,MAAMG,KAAK,GAAGC,QAAQ,CACpBJ,CAAC,CAACK,MAAM,CAACC,OAAO,CAACN,CAAC,CAACK,MAAM,CAACC,OAAO,CAACC,cAAc,CAAC,CAACC,SACpD,CAAC;MACD,MAAMpB,QAAQ,GAAG,MAAMhB,KAAK,CAACI,GAAG,CAACD,GAAG,GAAI,uBAAsB4B,KAAM,EAAC,CAAC;MAEtEhB,MAAM,CAAC,aAAa,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACtC,CAAC;IACD,MAAM2B,cAAcA,CAAC;MAAE9B;IAAO,CAAC,EAAE+B,WAAW,EAAE;MAC5C,MAAM9B,QAAQ,GAAG,MAAMhB,KAAK,CAACuC,GAAG,CAC9BpC,GAAG,GAAI,gBAAe2C,WAAW,CAACrB,EAAG,EAAC,EACtCqB,WACF,CAAC;MACDjB,OAAO,CAACC,GAAG,CAACd,QAAQ,CAACE,IAAI,CAAC;MAC1BH,MAAM,CAACZ,GAAG,GAAG,aAAa,EAAEa,QAAQ,CAACE,IAAI,CAAC;IAC5C;EACF,CAAC;EAED6B,SAAS,EAAE;IACT;IACAC,QAAQ,EAAEA,CAAC1C,KAAK,EAAEE,KAAK,KAAMF,KAAK,CAACE,KAAK,GAAGA,KAAM;IACjDyC,OAAO,EAAEA,CAAC3C,KAAK,EAAEC,IAAI,KAAKD,KAAK,CAACE,KAAK,CAAC0C,OAAO,CAAC3C,IAAI,CAAC;IACnD4C,UAAU,EAAEA,CAAC5C,IAAI,EAAEkB,EAAE,KAClBnB,KAAK,CAACE,KAAK,GAAGF,KAAK,CAACE,KAAK,CAAC4C,MAAM,CAAE7C,IAAI,IAAKA,IAAI,CAACkB,EAAE,KAAKA,EAAE,CAAE;IAC9D4B,SAAS,EAAEA,CAAC/C,KAAK,EAAEgC,OAAO,KAAK;MAC7B,MAAMgB,KAAK,GAAGhD,KAAK,CAACC,IAAI,CAACgD,SAAS,CAAEhD,IAAI,IAAKA,IAAI,CAACkB,EAAE,KAAKa,OAAO,CAACb,EAAE,CAAC;MACpE,IAAI6B,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBhD,KAAK,CAACC,IAAI,CAACiD,MAAM,CAACF,KAAK,EAAE,CAAC,EAAEhB,OAAO,CAAC;MACtC;IACF,CAAC;IACD;IACAmB,WAAW,EAAEA,CAACnD,KAAK,EAAEI,QAAQ,KAAMJ,KAAK,CAACI,QAAQ,GAAGA,QAAS;IAC7DgD,UAAU,EAAEA,CAACpD,KAAK,EAAEG,OAAO,KAAKH,KAAK,CAACI,QAAQ,CAACwC,OAAO,CAACzC,OAAO,CAAC;IAC/DkD,aAAa,EAAEA,CAAClD,OAAO,EAAEgB,EAAE,KACxBnB,KAAK,CAACI,QAAQ,GAAGJ,KAAK,CAACI,QAAQ,CAAC0C,MAAM,CAAE3C,OAAO,IAAKA,OAAO,CAACgB,EAAE,KAAKA,EAAE,CAAE;IAC1EoB,cAAc,EAAEA,CAACvC,KAAK,EAAEsD,UAAU,KAAK;MACrC,MAAMN,KAAK,GAAGhD,KAAK,CAACI,QAAQ,CAAC6C,SAAS,CACnC9C,OAAO,IAAKA,OAAO,CAACgB,EAAE,KAAKmC,UAAU,CAACnC,EACzC,CAAC;MACD,IAAI6B,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBhD,KAAK,CAACG,OAAO,CAAC+C,MAAM,CAACF,KAAK,EAAE,CAAC,EAAEM,UAAU,CAAC;MAC5C;IACF;EACF;AACF,CAAC,CAAC;AAEF,MAAMC,GAAG,GAAGlE,SAAS,CAACC,GAAG,CAAC;AAC1BiE,GAAG,CAACC,GAAG,CAACjE,MAAM,CAAC;AACfgE,GAAG,CAACC,GAAG,CAACzD,KAAK,CAAC;AACdwD,GAAG,CAACC,GAAG,CAAChE,aAAa,CAAC;AACtB+D,GAAG,CAACE,KAAK,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}