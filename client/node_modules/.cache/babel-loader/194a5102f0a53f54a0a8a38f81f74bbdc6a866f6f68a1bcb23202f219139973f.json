{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  const _component_Tasks = _resolveComponent(\"Tasks\");\n  const _component_AddTask = _resolveComponent(\"AddTask\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header, {\n    title: \"Tasks\",\n    onToggleAddTask: $options.toggleAddTask,\n    showAddTask: $data.showAddTask\n  }, null, 8 /* PROPS */, [\"onToggleAddTask\", \"showAddTask\"]), _createVNode(_component_Tasks, {\n    onDeleteTask: _ctx.deleteTask,\n    tasks: $data.tasks\n  }, null, 8 /* PROPS */, [\"onDeleteTask\", \"tasks\"]), _withDirectives(_createVNode(_component_AddTask, {\n    onAddTask: $options.addTask\n  }, null, 8 /* PROPS */, [\"onAddTask\"]), [[_vShow, $data.showAddTask]]), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.taskStore.tasks, task => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"loading\",\n      key: task.id\n    }, [_createVNode(_component_router_view)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createVNode","_component_Header","title","onToggleAddTask","$options","toggleAddTask","showAddTask","$data","_component_Tasks","onDeleteTask","_ctx","deleteTask","tasks","_component_AddTask","onAddTask","addTask","_createElementVNode","_hoisted_1","_createElementBlock","_Fragment","_renderList","taskStore","task","key","id","_component_router_view"],"sources":["/Users/dittmannja/dev/UÌˆbungen/TaskTrackerApp/nestjs_travery/TaskTracker-1/nest-rest-api/client/src/views/Tasks1.vue"],"sourcesContent":["<template>\n  <Header\n    title=\"Tasks\"\n    @toggle-add-task=\"toggleAddTask\"\n    :showAddTask=\"showAddTask\"\n  />\n  <Tasks @delete-task=\"deleteTask\" :tasks=\"tasks\" />\n  <AddTask v-show=\"showAddTask\" @add-task=\"addTask\" />\n  <div class=\"task-list\">\n    <div class=\"loading\" v-for=\"task in taskStore.tasks\" :key=\"task.id\">\n      <router-view></router-view>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Tasks from '../components/Tasks';\nimport AddTask from '../components/AddTask';\nimport Header from '../components/Header';\nimport { useTaskStore } from '../stores/TaskStore';\n\nexport default {\n  name: 'Tasks1',\n\n  components: {\n    Tasks,\n    AddTask,\n    Header,\n  },\n\n  data() {\n    return {\n      showAddTask: false,\n      tasks: [],\n    };\n  },\n\n  methods: {\n    toggleAddTask() {\n      this.showAddTask = !this.showAddTask;\n    },\n    addTask() {\n      const taskStore = useTaskStore();\n\n      taskStore.addTask();\n    },\n  },\n  async created() {\n    const taskStore = useTaskStore();\n\n    //fetch data\n    const data = await taskStore.getTask();\n    console.log(data);\n    return taskStore;\n  },\n\n  // Ende von methods\n  /*\n   */\n};\n</script>\n\n"],"mappings":";;EAQOA,KAAK,EAAC;AAAW;;;;;;6DAPtBC,YAAA,CAIEC,iBAAA;IAHAC,KAAK,EAAC,OAAO;IACZC,eAAe,EAAEC,QAAA,CAAAC,aAAa;IAC9BC,WAAW,EAAEC,KAAA,CAAAD;+DAEhBN,YAAA,CAAkDQ,gBAAA;IAA1CC,YAAW,EAAEC,IAAA,CAAAC,UAAU;IAAGC,KAAK,EAAEL,KAAA,CAAAK;sEACzCZ,YAAA,CAAoDa,kBAAA;IAArBC,SAAQ,EAAEV,QAAA,CAAAW;EAAO,yC,SAA/BR,KAAA,CAAAD,WAAW,E,GAC5BU,mBAAA,CAIM,OAJNC,UAIM,I,kBAHJC,mBAAA,CAEMC,SAAA,QAAAC,WAAA,CAF8BV,IAAA,CAAAW,SAAS,CAACT,KAAK,EAAvBU,IAAI;yBAAhCJ,mBAAA,CAEM;MAFDnB,KAAK,EAAC,SAAS;MAAkCwB,GAAG,EAAED,IAAI,CAACE;QAC9DxB,YAAA,CAA2ByB,sBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}