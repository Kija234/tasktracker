{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport BootstrapNext from 'bootstrap-vue-next';\nimport { createStore } from 'vuex';\nconst store = createStore({\n  state() {\n    return {\n      getters: {\n        allTasks: state => state.tasks\n      },\n      actions: {\n        //Code for Tasks\n        async getTasks({\n          commit\n        }) {\n          const response = await axios.get(url + 'api/tasks');\n          commit('setTasks', response.data);\n        },\n        async addTask({\n          commit\n        }, _newTask) {\n          const response = await axios.post(url + 'api/tasks', {\n            _newTask\n          });\n          commit('newTask', response.data);\n        },\n        async deleteTask({\n          commit\n        }, id) {\n          await axios.delete(url + 'api/tasks/id');\n        },\n        async filterTask({\n          commit\n        }, e) {\n          console.log(e); //minute 45:44\n          const limit = parseInt(e.target.options[e.target.options.selectetdIndex].innerText);\n          const response = await axios.get(url + `api/tasks?_limit=${limit}`);\n          commit('setTask', response.data);\n        },\n        async updateTask({\n          commit\n        }, updTask) {\n          const response = await axios.put(url + `api/tasks/${updTask.id}`, updTask);\n          console.log(response.data);\n          commit('updTask', response.data);\n        },\n        //Code for contacts\n        async getContacts({\n          commit\n        }) {\n          const response = await axios.get(url + 'api/contacts');\n          commit('setContacts', response.data);\n        },\n        async addContacts({\n          commit\n        }, _newContacts) {\n          const response = await axios.post(url + 'api/contacts', {\n            _newContacts\n          });\n          commit('newContacts', response.data);\n        },\n        async deleteContacts({\n          commit\n        }, id) {\n          await axios.delete(url + 'api/contacts/id');\n        },\n        async filterContacts({\n          commit\n        }, e) {\n          console.log(e); //minute 45:44\n          const limit = parseInt(e.target.options[e.target.options.selectetdIndex].innerText);\n          const response = await axios.get(url + `api/contacts?_limit=${limit}`);\n          commit('setContacts', response.data);\n        },\n        async updateContacts({\n          commit\n        }, updContacts) {\n          const response = await axios.put(url + `api/contacts/${updContacts.id}`, updContacts);\n          console.log(response.data);\n          commit('updContacts', response.data);\n        }\n      },\n      mutations: {\n        //Tasks\n        setTasks: (state, tasks) => state.tasks = tasks,\n        newTask: (state, task) => state.tasks.unshift(task),\n        removeTask: (task, id) => state.tasks = state.tasks.filter(task => task.id !== id),\n        updatTask: (state, updTask) => {\n          const index = state.task.findIndex(task => task.id === updTask.id);\n          if (index !== -1) {\n            state.task.splice(index, 1, updTask);\n          }\n        },\n        //Contacts\n        setContacts: (state, contacts) => state.contacts = contacts,\n        newContact: (state, contact) => state.contacts.unshift(contact),\n        removeContact: (contact, id) => state.contacts = state.contacts.filter(contact => contact.id !== id),\n        updateContacts: (state, updContact) => {\n          const index = state.contacts.findIndex(contact => contact.id === updContact.id);\n          if (index !== -1) {\n            state.contact.splice(index, 1, updContact);\n          }\n        }\n      }\n    };\n  }\n});\nconst app = createApp(App);\napp.use(router);\napp.use(store);\napp.use(BootstrapNext);\napp.mount('#app');","map":{"version":3,"names":["createApp","App","router","BootstrapNext","createStore","store","state","getters","allTasks","tasks","actions","getTasks","commit","response","axios","get","url","data","addTask","_newTask","post","deleteTask","id","delete","filterTask","e","console","log","limit","parseInt","target","options","selectetdIndex","innerText","updateTask","updTask","put","getContacts","addContacts","_newContacts","deleteContacts","filterContacts","updateContacts","updContacts","mutations","setTasks","newTask","task","unshift","removeTask","filter","updatTask","index","findIndex","splice","setContacts","contacts","newContact","contact","removeContact","updContact","app","use","mount"],"sources":["/Users/dittmannja/dev/UÌˆbungen/TaskTrackerApp/nestjs_travery/TaskTracker-1/nest-rest-api/client/src/main.js"],"sourcesContent":["import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport BootstrapNext from 'bootstrap-vue-next';\nimport { createStore } from 'vuex';\n\nconst store = createStore({\n  state() {\n    return {\n      getters: {\n        allTasks: (state) => state.tasks,\n      },\n\n      actions: {\n        //Code for Tasks\n        async getTasks({ commit }) {\n          const response = await axios.get(url + 'api/tasks');\n          commit('setTasks', response.data);\n        },\n        async addTask({ commit }, _newTask) {\n          const response = await axios.post(url + 'api/tasks', { _newTask });\n\n          commit('newTask', response.data);\n        },\n        async deleteTask({ commit }, id) {\n          await axios.delete(url + 'api/tasks/id');\n        },\n        async filterTask({ commit }, e) {\n          console.log(e); //minute 45:44\n          const limit = parseInt(\n            e.target.options[e.target.options.selectetdIndex].innerText,\n          );\n          const response = await axios.get(url + `api/tasks?_limit=${limit}`);\n\n          commit('setTask', response.data);\n        },\n        async updateTask({ commit }, updTask) {\n          const response = await axios.put(\n            url + `api/tasks/${updTask.id}`,\n            updTask,\n          );\n          console.log(response.data);\n          commit('updTask', response.data);\n        },\n\n        //Code for contacts\n        async getContacts({ commit }) {\n          const response = await axios.get(url + 'api/contacts');\n          commit('setContacts', response.data);\n        },\n        async addContacts({ commit }, _newContacts) {\n          const response = await axios.post(url + 'api/contacts', {\n            _newContacts,\n          });\n\n          commit('newContacts', response.data);\n        },\n        async deleteContacts({ commit }, id) {\n          await axios.delete(url + 'api/contacts/id');\n        },\n        async filterContacts({ commit }, e) {\n          console.log(e); //minute 45:44\n          const limit = parseInt(\n            e.target.options[e.target.options.selectetdIndex].innerText,\n          );\n          const response = await axios.get(\n            url + `api/contacts?_limit=${limit}`,\n          );\n\n          commit('setContacts', response.data);\n        },\n        async updateContacts({ commit }, updContacts) {\n          const response = await axios.put(\n            url + `api/contacts/${updContacts.id}`,\n            updContacts,\n          );\n          console.log(response.data);\n          commit('updContacts', response.data);\n        },\n      },\n\n      mutations: {\n        //Tasks\n        setTasks: (state, tasks) => (state.tasks = tasks),\n        newTask: (state, task) => state.tasks.unshift(task),\n        removeTask: (task, id) =>\n          (state.tasks = state.tasks.filter((task) => task.id !== id)),\n        updatTask: (state, updTask) => {\n          const index = state.task.findIndex((task) => task.id === updTask.id);\n          if (index !== -1) {\n            state.task.splice(index, 1, updTask);\n          }\n        },\n        //Contacts\n        setContacts: (state, contacts) => (state.contacts = contacts),\n        newContact: (state, contact) => state.contacts.unshift(contact),\n        removeContact: (contact, id) =>\n          (state.contacts = state.contacts.filter(\n            (contact) => contact.id !== id,\n          )),\n        updateContacts: (state, updContact) => {\n          const index = state.contacts.findIndex(\n            (contact) => contact.id === updContact.id,\n          );\n          if (index !== -1) {\n            state.contact.splice(index, 1, updContact);\n          }\n        },\n      },\n    };\n  },\n});\n\nconst app = createApp(App);\napp.use(router);\napp.use(store);\napp.use(BootstrapNext);\napp.mount('#app');\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}