{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from 'pinia';\nexport const useTaskStore = defineStore('taskStore', {\n  state: () => ({\n    tasks: [],\n    loading: false\n  }),\n  actions: {\n    async getTask() {\n      const res = await fetch('http://localhost:3000/api/tasks');\n      const data = await res.json();\n      this.tasks = data;\n    },\n    async addTask(task) {\n      this - this.tasks.push(task);\n      const res = await fetch('http//localhost:3000/api/tasks', {\n        method: 'POST',\n        body: JSON.stringify(task),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (res.error) {\n        console.log(res.error);\n      }\n    },\n    async deleteTask(id) {\n      this.tasks = this.tasks.filter(task => {\n        return task.id !== id;\n      });\n      const res = await fetch('http://localhist:3000/api/tasks' + id, {\n        method: 'DELETE'\n      });\n      if (res.error) {\n        console.log(res.error);\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","useTaskStore","state","tasks","loading","actions","getTask","res","fetch","data","json","addTask","task","push","method","body","JSON","stringify","headers","error","console","log","deleteTask","id","filter"],"sources":["/Users/dittmannja/dev/UÌˆbungen/TaskTrackerApp/nestjs_travery/TaskTracker-1/nest-rest-api/client/src/stores/TaskStore.js"],"sourcesContent":["import { defineStore } from 'pinia';\n\nexport const useTaskStore = defineStore('taskStore', {\n  state: () => ({\n    tasks: [],\n    loading: false,\n  }),\n  actions: {\n    async getTask() {\n      const res = await fetch('http://localhost:3000/api/tasks');\n      const data = await res.json();\n\n      this.tasks = data;\n    },\n    async addTask(task) {\n      this - this.tasks.push(task);\n\n      const res = await fetch('http//localhost:3000/api/tasks', {\n        method: 'POST',\n        body: JSON.stringify(task),\n        headers: { 'Content-Type': 'application/json' },\n      });\n\n      if (res.error) {\n        console.log(res.error);\n      }\n    },\n    async deleteTask(id) {\n      this.tasks = this.tasks.filter((task) => {\n        return task.id !== id;\n      });\n\n      const res = await fetch('http://localhist:3000/api/tasks' + id, {\n        method: 'DELETE',\n      });\n      if (res.error) {\n        console.log(res.error);\n      }\n    },\n  },\n});\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC,WAAW,EAAE;EACnDE,KAAK,EAAEA,CAAA,MAAO;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;EACFC,OAAO,EAAE;IACP,MAAMC,OAAOA,CAAA,EAAG;MACd,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MAC1D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAE7B,IAAI,CAACP,KAAK,GAAGM,IAAI;IACnB,CAAC;IACD,MAAME,OAAOA,CAACC,IAAI,EAAE;MAClB,IAAI,GAAG,IAAI,CAACT,KAAK,CAACU,IAAI,CAACD,IAAI,CAAC;MAE5B,MAAML,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QACxDM,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;QAC1BM,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAChD,CAAC,CAAC;MAEF,IAAIX,GAAG,CAACY,KAAK,EAAE;QACbC,OAAO,CAACC,GAAG,CAACd,GAAG,CAACY,KAAK,CAAC;MACxB;IACF,CAAC;IACD,MAAMG,UAAUA,CAACC,EAAE,EAAE;MACnB,IAAI,CAACpB,KAAK,GAAG,IAAI,CAACA,KAAK,CAACqB,MAAM,CAAEZ,IAAI,IAAK;QACvC,OAAOA,IAAI,CAACW,EAAE,KAAKA,EAAE;MACvB,CAAC,CAAC;MAEF,MAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,GAAGe,EAAE,EAAE;QAC9DT,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAIP,GAAG,CAACY,KAAK,EAAE;QACbC,OAAO,CAACC,GAAG,CAACd,GAAG,CAACY,KAAK,CAAC;MACxB;IACF;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}